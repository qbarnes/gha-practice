name: gha-practice-release

on:
  push:
    branches:
      - master
    paths:
      - 'version.h'
  workflow_dispatch:


#  label:
#    types:
#      - [created, edited]


#permissions:
#add this later


jobs:
#  build:
#    name: Build All
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: ./.github/workflows/gha-practice-build.yml

  build_all:
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.build_version.outputs.build_version }}
      release_files: ${{ steps.release_files.outputs.release_files }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Prep cross-compiler
        run: |
          wget -nv https://github.com/andrewwutw/build-djgpp/releases/download/v3.1/djgpp-linux64-gcc1020.tar.bz2
          mkdir local
          tar -xf djgpp-linux64-gcc1020.tar.bz2 -C local
          ls -l
          ls -l local

      - name: Add cross-compiler to PATH
        run: echo "PATH=$PWD/local/djgpp/bin:$PATH" >> $GITHUB_ENV

      - name: Read version and save in "build_version" environment var
        run: echo "build_version=$(make show_version)" >> $GITHUB_ENV

      - id: build_version
        run: echo "build_version=${{ env.build_version }}" >> $GITHUB_OUTPUT

      - name: Add source tarball to release_files
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}gha-practice-${{ env.build_version }}-src.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "release_files=${release_files}"

      - name: Check env
        run: env

      - name: Build Linux
        run:  make

      - name: Add linux tarball to release_files
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}gha-practice-${{ env.build_version }}-linux-x86_64.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "release_files=${release_files}"

      - name: Check env
        run: env

      - name: Build MS-DOS
        run:  make TARGET_OS=MSDOS

      - name: Add MS-DOS tarball to release_files
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}gha-practice-${{ env.build_version }}-msdos.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "release_files=${release_files}"

      - name: Check env
        run: env

      - name: Show release_files
        run: echo "release_files=${{ env.release_files }}"

#      - id: release_files
#        run: echo "release_files=${{ env.release_files }}" >> $GITHUB_OUTPUT

      - name: Build Full Release
        run:  make fullrelease

      - name: Check build
        run: ls -l

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-release-artifacts-${{ env.build_version }}
          path: |
            ${{ env.release_files }}
          if-no-files-found: error
          #path: ./gha-practice-${{ env.build_version }}-*.tar.gz

  release:
    name: Make Release
    runs-on: ubuntu-latest
    needs: build_all
    steps:
      - name: Show version
        run: |
          echo needs.build_all.outputs.build_version=${{ needs.build_all.outputs.build_version }}
          echo needs.build_all.outputs.release_files=${{ needs.build_all.outputs.release_files }}
          env

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-release-artifacts-${{ needs.build_all.outputs.build_version }}

      - name: Check for files
        run: ls -l
