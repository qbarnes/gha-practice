name: gha-practice-build

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: Name of package
        required: false
        type: string
        default: "gha-practice"

  workflow_call:
    inputs:
      package_name:
        description: Name of package
        required: false
        type: string
        default: "gha-practice"
    outputs:
      build_version:
        description: Build version
        value: ${{ jobs.build.outputs.build_version }}


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      build_version: ${{ steps.build_version.outputs.build_version }}
      build_arch: ${{ steps.build_arch.outputs.build_arch }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Prep cross-compiler and add to PATH
        run: |
          wget -nv https://github.com/andrewwutw/build-djgpp/releases/download/v3.1/djgpp-linux64-gcc1020.tar.bz2
          mkdir djgpp
          tar -xf djgpp-linux64-gcc1020.tar.bz2 -C djgpp
          echo "$PWD/djgpp/bin" >> $GITHUB_PATH

      - name: Set package name in env
        run: echo "package=${{ inputs.package_name }}" >> $GITHUB_ENV

      - name: Read version and save in "build_version" environment variable
        run: echo "build_version=$(make show_version)" >> $GITHUB_ENV

      - name: Read architecture and save in "build_arch" environment variable
        run: echo "build_arch=$(arch)" >> $GITHUB_ENV

      - id: build_version
        run: echo "build_version=${build_version}" >> $GITHUB_OUTPUT

      - id: build_arch
        run: echo "build_arch=${build_arch}" >> $GITHUB_OUTPUT

      - name: Add source tarball to "release_files"
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}${package}-${build_version}-src.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build Linux
        run:  make

      - name: Add linux tarball to "release_files"
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}${package}-${build_version}-linux-${arch}.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build MS-DOS
        run:  make TARGET_OS=MSDOS

      - name: Add MS-DOS tarball to "release_files"
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}${package}-${build_version}-msdos.tar.gz" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Add "release_notes" file to "release_files"
        run: |
          echo "release_files<<EOF" >> $GITHUB_ENV
          echo -e "${release_files}${release_files:+\n}release_notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build full release
        run:  make fullrelease

      - name: Show build files
        run: ls -l

      - name: Show "release_files"
        run: |
          echo "release_files=${release_files}"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.package }}-build-artifacts-${{ env.build_version }}
          path: |
            ${{ env.release_files }}
          if-no-files-found: error
          retention-days: 2
